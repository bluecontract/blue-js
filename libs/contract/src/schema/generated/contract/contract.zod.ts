// Generated by ts-to-zod
import { z } from 'zod';

import {
  baseBlueObjectSchema,
  blueObjectSchema,
  blueObjectBooleanValueSchema,
  blueObjectStringValueSchema,
} from '@blue-company/language';
import { workflowStepObjectListSchema } from './../workflowStep/workflowStep.zod';
import { contractEventBlueObjectSchema } from './../contractEvent/contractEvent.zod';
import { timelineEntryBlueObjectSchema } from './../timeline/timelineEntry.zod';

export const participantTypeSchema = blueObjectSchema.and(
  z.object({
    name: z.literal('Participant').optional(),
  })
);

export const participantSchema = baseBlueObjectSchema.extend({
  type: participantTypeSchema.optional(),
  timeline: blueObjectStringValueSchema.optional(),
  thread: blueObjectStringValueSchema.optional(),
  timelineSource: timelineEntryBlueObjectSchema.optional(),
});

export const participantObjectListSchema = baseBlueObjectSchema.extend({
  items: z.array(participantSchema).optional(),
});

export const contractMessagingSchema = baseBlueObjectSchema.extend({
  participants: blueObjectSchema.optional(),
});

export const contractPhotoSchema = blueObjectStringValueSchema;

export const contractsListObjectSchema = blueObjectSchema;

export const workflowSchema = baseBlueObjectSchema.extend({
  steps: workflowStepObjectListSchema.optional(),
  trigger: contractEventBlueObjectSchema.optional(),
});

export const localContractSchema = baseBlueObjectSchema.extend({
  id: z.object({
    type: blueObjectSchema
      .and(
        z.object({
          blueId: z.literal('DHmxTkFbXePZHCHCYmQr2dSzcNLcryFVjXVHkdQrrZr8'),
        })
      )
      .optional(),
    value: z.number().optional(),
  }),
  type: blueObjectSchema
    .and(
      z.object({
        blueId: z.literal('6gBMYGeWw1Cutbsrzj3c98RH4VrSJNvPsgZ4F4A19i3f'),
      })
    )
    .optional(),
});

export const workflowObjectListSchema = baseBlueObjectSchema.extend({
  items: z.array(workflowSchema).optional(),
});

export const contractSchema = baseBlueObjectSchema.extend({
  participants: z.record(participantObjectListSchema).optional(),
  workflows: workflowObjectListSchema.optional(),
  properties: blueObjectSchema.optional(),
  photo: contractPhotoSchema.optional(),
  contracts: contractsListObjectSchema.optional(),
  messaging: contractMessagingSchema.optional(),
});
